{"version":3,"file":"js/325.a0986293.js","mappings":"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EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,GAAG,UAAU,CAAC,GAAG,WAAW,CAAC,GAAG,YAAY,CAAC,GAAG,WAAW,CAAC,IAAI,UAAU,CAAC,EAAE,WAAW,CAAC,GAAG,WAAW,CAAC,EAAE,oBAAoB,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,sBAAsB,CAAC,EAAE,WAAW,CAAC,GAAG,eAAe,CAAC,IAAI,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,aAAa,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,cAAc,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,aAAa,CAAC,GAAG,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,iBAAiB,CAAC,GAAG,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY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CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,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","sources":["webpack://my-github-page/./src/views/ResourceView.vue","webpack://my-github-page/./src/components/ResourceCard.vue","webpack://my-github-page/./src/components/ResourceCard.vue?cad7","webpack://my-github-page/./src/components/ResourceDetail.vue","webpack://my-github-page/./node_modules/mdurl/lib/decode.mjs","webpack://my-github-page/./node_modules/mdurl/lib/encode.mjs","webpack://my-github-page/./node_modules/mdurl/lib/format.mjs","webpack://my-github-page/./node_modules/mdurl/lib/parse.mjs","webpack://my-github-page/./node_modules/uc.micro/categories/P/regex.mjs","webpack://my-github-page/./node_modules/uc.micro/categories/S/regex.mjs","webpack://my-github-page/./node_modules/uc.micro/properties/Any/regex.mjs","webpack://my-github-page/./node_modules/uc.micro/categories/Cc/regex.mjs","webpack://my-github-page/./node_modules/uc.micro/categories/Cf/regex.mjs","webpack://my-github-page/./node_modules/uc.micro/categories/Z/regex.mjs","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/encode-html.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/index.ts","webpack://my-github-page/./node_modules/markdown-it/lib/common/utils.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/helpers/parse_link_label.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/helpers/parse_link_destination.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/helpers/parse_link_title.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/renderer.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/ruler.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/token.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_core/state_core.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_core/normalize.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_core/block.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_core/inline.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_core/linkify.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_core/replacements.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_core/smartquotes.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_core/text_join.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/parser_core.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/state_block.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/table.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/code.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/fence.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/blockquote.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/hr.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/list.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/reference.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/common/html_blocks.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/common/html_re.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/html_block.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/heading.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/lheading.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_block/paragraph.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/parser_block.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/state_inline.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/text.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/linkify.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/newline.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/escape.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/backticks.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/strikethrough.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/emphasis.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/link.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/image.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/autolink.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/html_inline.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/entity.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/rules_inline/fragments_join.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/parser_inline.mjs","webpack://my-github-page/./node_modules/linkify-it/lib/re.mjs","webpack://my-github-page/./node_modules/linkify-it/index.mjs","webpack://my-github-page/./node_modules/punycode.js/punycode.es6.js","webpack://my-github-page/./node_modules/markdown-it/lib/presets/default.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/presets/zero.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/presets/commonmark.mjs","webpack://my-github-page/./node_modules/markdown-it/lib/index.mjs","webpack://my-github-page/./src/components/ResourceDetail.vue?f3ac","webpack://my-github-page/./src/views/ResourceView.vue?b271","webpack://my-github-page/./node_modules/core-js/internals/a-possible-prototype.js","webpack://my-github-page/./node_modules/core-js/internals/array-buffer-basic-detection.js","webpack://my-github-page/./node_modules/core-js/internals/array-buffer-byte-length.js","webpack://my-github-page/./node_modules/core-js/internals/array-buffer-is-detached.js","webpack://my-github-page/./node_modules/core-js/internals/array-buffer-not-detached.js","webpack://my-github-page/./node_modules/core-js/internals/array-buffer-transfer.js","webpack://my-github-page/./node_modules/core-js/internals/array-buffer-view-core.js","webpack://my-github-page/./node_modules/core-js/internals/array-with.js","webpack://my-github-page/./node_modules/core-js/internals/detach-transferable.js","webpack://my-github-page/./node_modules/core-js/internals/environment-is-node.js","webpack://my-github-page/./node_modules/core-js/internals/environment.js","webpack://my-github-page/./node_modules/core-js/internals/get-built-in-node-module.js","webpack://my-github-page/./node_modules/core-js/internals/is-big-int-array.js","webpack://my-github-page/./node_modules/core-js/internals/is-possible-prototype.js","webpack://my-github-page/./node_modules/core-js/internals/object-set-prototype-of.js","webpack://my-github-page/./node_modules/core-js/internals/structured-clone-proper-transfer.js","webpack://my-github-page/./node_modules/core-js/internals/to-big-int.js","webpack://my-github-page/./node_modules/core-js/internals/to-index.js","webpack://my-github-page/./node_modules/core-js/modules/es.array-buffer.detached.js","webpack://my-github-page/./node_modules/core-js/modules/es.array-buffer.transfer-to-fixed-length.js","webpack://my-github-page/./node_modules/core-js/modules/es.array-buffer.transfer.js","webpack://my-github-page/./node_modules/core-js/modules/es.typed-array.to-reversed.js","webpack://my-github-page/./node_modules/core-js/modules/es.typed-array.to-sorted.js","webpack://my-github-page/./node_modules/core-js/modules/es.typed-array.with.js"],"sourcesContent":["<template>\r\n  <div class=\"resource-page\">\r\n    <!-- 条件渲染列表或详情 -->\r\n    <template v-if=\"selectedResource\">\r\n      <ResourceDetail \r\n        :resource=\"selectedResource\"\r\n        @back=\"selectedResource = null\"\r\n      />\r\n    </template>\r\n    <template v-else>\r\n      <!-- 资源列表 -->\r\n      <div class=\"resource-grid\">\r\n        <ResourceCard\r\n          v-for=\"item in currentPageItems\"\r\n          :key=\"item.id\"\r\n          :resource=\"item\"\r\n          @click-resource=\"showResourceDetail\"\r\n        />\r\n      </div>\r\n\r\n      <!-- 分页控件 -->\r\n      <div class=\"pagination\">\r\n        <button \r\n          :disabled=\"currentPage === 1\" \r\n          @click=\"changePage(currentPage - 1)\"\r\n          class=\"page-btn\"\r\n        >\r\n          上一页\r\n        </button>\r\n        <span class=\"page-info\">{{ currentPage }} / {{ totalPages }}</span>\r\n        <button \r\n          :disabled=\"currentPage === totalPages\" \r\n          @click=\"changePage(currentPage + 1)\"\r\n          class=\"page-btn\"\r\n        >\r\n          下一页\r\n        </button>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ResourceCard from '@/components/ResourceCard.vue'\r\nimport ResourceDetail from '@/components/ResourceDetail.vue'\r\n\r\nexport default {\r\n  name: 'ResourceView',\r\n  components: {\r\n    ResourceCard,\r\n    ResourceDetail\r\n  },\r\n  data() {\r\n    return {\r\n      resources: [],\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      selectedResource: null\r\n    }\r\n  },\r\n  computed: {\r\n    totalPages() {\r\n      return Math.ceil(this.resources.length / this.pageSize)\r\n    },\r\n    currentPageItems() {\r\n      const start = (this.currentPage - 1) * this.pageSize\r\n      const end = start + this.pageSize\r\n      return this.resources.slice(start, end)\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchResources() {\r\n      try {\r\n          const articlesResponse = await fetch('https://raw.githubusercontent.com/3542Q/JSRepository/main/articles/articles.json')\r\n          const articles = await articlesResponse.json(); // 解析json数据\r\n          /*articles是一个从数据库里获取到的数组,其元素的字段如下：\r\n            CREATE TABLE Article (\r\n            articleID INT AUTO_INCREMENT PRIMARY KEY,\r\n            title VARCHAR(255),\r\n            titleImageURL TEXT,\r\n            contentURL TEXT,\r\n          );*/\r\n          articles.sort((a, b) => b.articleID - a.articleID); // 按articleID降序排序，以便获取最新的文章\r\n          this.resources = articles;\r\n      } catch (error) {\r\n          console.error('Failed to load script:', error)\r\n      }\r\n    },\r\n    changePage(page) {\r\n      if (page >= 1 && page <= this.totalPages) {\r\n        this.currentPage = page\r\n      }\r\n    },\r\n    showResourceDetail(resource) {\r\n      this.selectedResource = resource\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchResources()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.resource-page {\r\n  padding: 20px;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.resource-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr); /* 固定5列 */\r\n  grid-auto-rows: min-content; /* 行高自适应内容 */\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n/* 强制每行只能放置5个项目 */\r\n.resource-grid > :nth-child(5n + 6) {\r\n  grid-column: 1;\r\n}\r\n\r\n/* 限制最多显示两行 */\r\n.resource-grid > :nth-child(n + 11) {\r\n  display: none;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.page-btn {\r\n  padding: 8px 16px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n.page-btn:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.page-btn:hover:not(:disabled) {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.page-info {\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n</style>","<template>\r\n  <div class=\"resource-card\" @click=\"$emit('click-resource', resource)\">\r\n    <div class=\"resource-image\">\r\n      <img :src=\"titleImageUrl\" :alt=\"title\">\r\n    </div>\r\n    <div class=\"resource-content\">\r\n      <h3 class=\"resource-title\">{{ title }}</h3>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ResourceCard',\r\n  props: {\r\n    resource: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data(){\r\n      return {\r\n          titleImageUrl: this.resource.titleImageURL,\r\n          title: this.resource.title\r\n\r\n      }\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  methods: {\r\n      \r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.resource-card {\r\n  border: 1px solid #eee;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s;\r\n  cursor: pointer;\r\n}\r\n\r\n.resource-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.resource-image {\r\n  width: 100%;\r\n  height: 180px;\r\n  overflow: hidden;\r\n}\r\n\r\n.resource-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.resource-content {\r\n  padding: 15px;\r\n}\r\n\r\n.resource-title {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  color: #333;\r\n  text-align: center;\r\n}\r\n</style>","import { render } from \"./ResourceCard.vue?vue&type=template&id=5fde96e7&scoped=true\"\nimport script from \"./ResourceCard.vue?vue&type=script&lang=js\"\nexport * from \"./ResourceCard.vue?vue&type=script&lang=js\"\n\nimport \"./ResourceCard.vue?vue&type=style&index=0&id=5fde96e7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5fde96e7\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"resource-detail\">\r\n    <div class=\"detail-header\">\r\n      <button class=\"back-button\" @click=\"$emit('back')\">返回列表</button>\r\n      <h1>{{ title }}</h1>\r\n    </div>\r\n    <img :src=\"titleImageUrl\" :alt=\"title\" class=\"detail-image\">\r\n    <div class=\"content markdown-content\" v-html=\"content\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MarkdownIt from 'markdown-it';\r\n\r\nexport default {\r\n  name: 'ResourceDetail',\r\n  props: {\r\n    resource: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      content: '',\r\n      title: this.resource.title,\r\n      titleImageUrl: this.resource.titleImageURL,\r\n      md: null,\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.md = new MarkdownIt({\r\n      html: true,\r\n      // 自定义图片渲染\r\n      replaceRules: {\r\n        image(md) {\r\n          md.renderer.rules.image = function(tokens, idx) {\r\n            const token = tokens[idx];\r\n            const srcIndex = token.attrIndex('src');\r\n            const src = token.attrs[srcIndex][1];\r\n            const alt = token.content || '';\r\n\r\n            return `<div class=\"markdown-image-wrapper\"><img src=\"${src}\" alt=\"${alt}\" /></div>`;\r\n          };\r\n        }\r\n      }\r\n    });\r\n  },\r\n\r\n  mounted() {\r\n    this.fetchContent(this.resource.contentURL);\r\n  },\r\n\r\n  methods: {\r\n    async fetchContent(contentURL) {\r\n      try {\r\n        const response = await fetch(contentURL);\r\n        const parseContent = await response.text();\r\n        this.content = this.md.render(parseContent);\r\n      } catch(error) {\r\n        console.log(error);\r\n      }\r\n      return this.content;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.resource-detail {\r\n  padding: 20px;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.detail-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.back-button {\r\n  padding: 8px 16px;\r\n  margin-right: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n.back-button:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.detail-image {\r\n  width: 100%;\r\n  max-height: 400px;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 使用 :deep() 来深度选择器处理动态生成的内容 */\r\n\r\n.content {\r\n  line-height: 1.8;\r\n  color: #333;\r\n}\r\n\r\n.content :deep(p) {\r\n  margin: 1em 0;\r\n  text-align: left;\r\n}\r\n\r\n.content :deep(.markdown-image-wrapper) {\r\n  text-align: center;\r\n  margin: 1em 0;\r\n}\r\n\r\n.content :deep(.markdown-image-wrapper img) {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n</style>","/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n","const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n","export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n","export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/","export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default /[\\0-\\x1F\\x7F-\\x9F]/","export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/",null,null,null,null,null,null,null,"// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n","// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n","// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n","// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n","// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n","// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n","export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n","export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n","// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n","// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n","// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n","// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n","// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n","import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n","// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n","// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n","// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n","// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n","// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n","// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n","// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n","// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n","// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n","// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n","// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n","// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n","// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n","import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n","import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n","import { render } from \"./ResourceDetail.vue?vue&type=template&id=5bc196fb&scoped=true\"\nimport script from \"./ResourceDetail.vue?vue&type=script&lang=js\"\nexport * from \"./ResourceDetail.vue?vue&type=script&lang=js\"\n\nimport \"./ResourceDetail.vue?vue&type=style&index=0&id=5bc196fb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5bc196fb\"]])\n\nexport default __exports__","import { render } from \"./ResourceView.vue?vue&type=template&id=ed7625a0&scoped=true\"\nimport script from \"./ResourceView.vue?vue&type=script&lang=js\"\nexport * from \"./ResourceView.vue?vue&type=script&lang=js\"\n\nimport \"./ResourceView.vue?vue&type=style&index=0&id=ed7625a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ed7625a0\"]])\n\nexport default __exports__","'use strict';\nvar isPossiblePrototype = require('../internals/is-possible-prototype');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (isPossiblePrototype(argument)) return argument;\n  throw new $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","'use strict';\n// eslint-disable-next-line es/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar classof = require('../internals/classof-raw');\n\nvar ArrayBuffer = globalThis.ArrayBuffer;\nvar TypeError = globalThis.TypeError;\n\n// Includes\n// - Perform ? RequireInternalSlot(O, [[ArrayBufferData]]).\n// - If IsSharedArrayBuffer(O) is true, throw a TypeError exception.\nmodule.exports = ArrayBuffer && uncurryThisAccessor(ArrayBuffer.prototype, 'byteLength', 'get') || function (O) {\n  if (classof(O) !== 'ArrayBuffer') throw new TypeError('ArrayBuffer expected');\n  return O.byteLength;\n};\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar arrayBufferByteLength = require('../internals/array-buffer-byte-length');\n\nvar ArrayBuffer = globalThis.ArrayBuffer;\nvar ArrayBufferPrototype = ArrayBuffer && ArrayBuffer.prototype;\nvar slice = ArrayBufferPrototype && uncurryThis(ArrayBufferPrototype.slice);\n\nmodule.exports = function (O) {\n  if (arrayBufferByteLength(O) !== 0) return false;\n  if (!slice) return false;\n  try {\n    slice(O, 0, 0);\n    return false;\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar isDetached = require('../internals/array-buffer-is-detached');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it) {\n  if (isDetached(it)) throw new $TypeError('ArrayBuffer is detached');\n  return it;\n};\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar toIndex = require('../internals/to-index');\nvar notDetached = require('../internals/array-buffer-not-detached');\nvar arrayBufferByteLength = require('../internals/array-buffer-byte-length');\nvar detachTransferable = require('../internals/detach-transferable');\nvar PROPER_STRUCTURED_CLONE_TRANSFER = require('../internals/structured-clone-proper-transfer');\n\nvar structuredClone = globalThis.structuredClone;\nvar ArrayBuffer = globalThis.ArrayBuffer;\nvar DataView = globalThis.DataView;\nvar min = Math.min;\nvar ArrayBufferPrototype = ArrayBuffer.prototype;\nvar DataViewPrototype = DataView.prototype;\nvar slice = uncurryThis(ArrayBufferPrototype.slice);\nvar isResizable = uncurryThisAccessor(ArrayBufferPrototype, 'resizable', 'get');\nvar maxByteLength = uncurryThisAccessor(ArrayBufferPrototype, 'maxByteLength', 'get');\nvar getInt8 = uncurryThis(DataViewPrototype.getInt8);\nvar setInt8 = uncurryThis(DataViewPrototype.setInt8);\n\nmodule.exports = (PROPER_STRUCTURED_CLONE_TRANSFER || detachTransferable) && function (arrayBuffer, newLength, preserveResizability) {\n  var byteLength = arrayBufferByteLength(arrayBuffer);\n  var newByteLength = newLength === undefined ? byteLength : toIndex(newLength);\n  var fixedLength = !isResizable || !isResizable(arrayBuffer);\n  var newBuffer;\n  notDetached(arrayBuffer);\n  if (PROPER_STRUCTURED_CLONE_TRANSFER) {\n    arrayBuffer = structuredClone(arrayBuffer, { transfer: [arrayBuffer] });\n    if (byteLength === newByteLength && (preserveResizability || fixedLength)) return arrayBuffer;\n  }\n  if (byteLength >= newByteLength && (!preserveResizability || fixedLength)) {\n    newBuffer = slice(arrayBuffer, 0, newByteLength);\n  } else {\n    var options = preserveResizability && !fixedLength && maxByteLength ? { maxByteLength: maxByteLength(arrayBuffer) } : undefined;\n    newBuffer = new ArrayBuffer(newByteLength, options);\n    var a = new DataView(arrayBuffer);\n    var b = new DataView(newBuffer);\n    var copyLength = min(newByteLength, byteLength);\n    for (var i = 0; i < copyLength; i++) setInt8(b, i, getInt8(a, i));\n  }\n  if (!PROPER_STRUCTURED_CLONE_TRANSFER) detachTransferable(arrayBuffer);\n  return newBuffer;\n};\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-basic-detection');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar globalThis = require('../internals/global-this');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar classof = require('../internals/classof');\nvar tryToString = require('../internals/try-to-string');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar Int8Array = globalThis.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = globalThis.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar TypeError = globalThis.TypeError;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(globalThis.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQUIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar getTypedArrayConstructor = function (it) {\n  var proto = getPrototypeOf(it);\n  if (!isObject(proto)) return;\n  var state = getInternalState(proto);\n  return (state && hasOwn(state, TYPED_ARRAY_CONSTRUCTOR)) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw new TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;\n  throw new TypeError(tryToString(C) + ' is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced, options) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = globalThis[ARRAY];\n    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) {\n      // old WebKit bug - some methods are non-configurable\n      try {\n        TypedArrayConstructor.prototype[KEY] = property;\n      } catch (error2) { /* empty */ }\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    defineBuiltIn(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = globalThis[ARRAY];\n      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return defineBuiltIn(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = globalThis[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      defineBuiltIn(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = globalThis[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = globalThis[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw new TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (globalThis[NAME]) setPrototypeOf(globalThis[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (globalThis[NAME]) setPrototypeOf(globalThis[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQUIRED = true;\n  defineBuiltInAccessor(TypedArrayPrototype, TO_STRING_TAG, {\n    configurable: true,\n    get: function () {\n      return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n    }\n  });\n  for (NAME in TypedArrayConstructorsList) if (globalThis[NAME]) {\n    createNonEnumerableProperty(globalThis[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  getTypedArrayConstructor: getTypedArrayConstructor,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $RangeError = RangeError;\n\n// https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.with\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.with\nmodule.exports = function (O, C, index, value) {\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualIndex = relativeIndex < 0 ? len + relativeIndex : relativeIndex;\n  if (actualIndex >= len || actualIndex < 0) throw new $RangeError('Incorrect index');\n  var A = new C(len);\n  var k = 0;\n  for (; k < len; k++) A[k] = k === actualIndex ? value : O[k];\n  return A;\n};\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar getBuiltInNodeModule = require('../internals/get-built-in-node-module');\nvar PROPER_STRUCTURED_CLONE_TRANSFER = require('../internals/structured-clone-proper-transfer');\n\nvar structuredClone = globalThis.structuredClone;\nvar $ArrayBuffer = globalThis.ArrayBuffer;\nvar $MessageChannel = globalThis.MessageChannel;\nvar detach = false;\nvar WorkerThreads, channel, buffer, $detach;\n\nif (PROPER_STRUCTURED_CLONE_TRANSFER) {\n  detach = function (transferable) {\n    structuredClone(transferable, { transfer: [transferable] });\n  };\n} else if ($ArrayBuffer) try {\n  if (!$MessageChannel) {\n    WorkerThreads = getBuiltInNodeModule('worker_threads');\n    if (WorkerThreads) $MessageChannel = WorkerThreads.MessageChannel;\n  }\n\n  if ($MessageChannel) {\n    channel = new $MessageChannel();\n    buffer = new $ArrayBuffer(2);\n\n    $detach = function (transferable) {\n      channel.port1.postMessage(null, [transferable]);\n    };\n\n    if (buffer.byteLength === 2) {\n      $detach(buffer);\n      if (buffer.byteLength === 0) detach = $detach;\n    }\n  }\n} catch (error) { /* empty */ }\n\nmodule.exports = detach;\n","'use strict';\nvar ENVIRONMENT = require('../internals/environment');\n\nmodule.exports = ENVIRONMENT === 'NODE';\n","'use strict';\n/* global Bun, Deno -- detection */\nvar globalThis = require('../internals/global-this');\nvar userAgent = require('../internals/environment-user-agent');\nvar classof = require('../internals/classof-raw');\n\nvar userAgentStartsWith = function (string) {\n  return userAgent.slice(0, string.length) === string;\n};\n\nmodule.exports = (function () {\n  if (userAgentStartsWith('Bun/')) return 'BUN';\n  if (userAgentStartsWith('Cloudflare-Workers')) return 'CLOUDFLARE';\n  if (userAgentStartsWith('Deno/')) return 'DENO';\n  if (userAgentStartsWith('Node.js/')) return 'NODE';\n  if (globalThis.Bun && typeof Bun.version == 'string') return 'BUN';\n  if (globalThis.Deno && typeof Deno.version == 'object') return 'DENO';\n  if (classof(globalThis.process) === 'process') return 'NODE';\n  if (globalThis.window && globalThis.document) return 'BROWSER';\n  return 'REST';\n})();\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar IS_NODE = require('../internals/environment-is-node');\n\nmodule.exports = function (name) {\n  if (IS_NODE) {\n    try {\n      return globalThis.process.getBuiltinModule(name);\n    } catch (error) { /* empty */ }\n    try {\n      // eslint-disable-next-line no-new-func -- safe\n      return Function('return require(\"' + name + '\")')();\n    } catch (error) { /* empty */ }\n  }\n};\n","'use strict';\nvar classof = require('../internals/classof');\n\nmodule.exports = function (it) {\n  var klass = classof(it);\n  return klass === 'BigInt64Array' || klass === 'BigUint64Array';\n};\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nmodule.exports = function (argument) {\n  return isObject(argument) || argument === null;\n};\n","'use strict';\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar isObject = require('../internals/is-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    requireObjectCoercible(O);\n    aPossiblePrototype(proto);\n    if (!isObject(O)) return O;\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar fails = require('../internals/fails');\nvar V8 = require('../internals/environment-v8-version');\nvar ENVIRONMENT = require('../internals/environment');\n\nvar structuredClone = globalThis.structuredClone;\n\nmodule.exports = !!structuredClone && !fails(function () {\n  // prevent V8 ArrayBufferDetaching protector cell invalidation and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if ((ENVIRONMENT === 'DENO' && V8 > 92) || (ENVIRONMENT === 'NODE' && V8 > 94) || (ENVIRONMENT === 'BROWSER' && V8 > 97)) return false;\n  var buffer = new ArrayBuffer(8);\n  var clone = structuredClone(buffer, { transfer: [buffer] });\n  return buffer.byteLength !== 0 || clone.byteLength !== 8;\n});\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\n\nvar $TypeError = TypeError;\n\n// `ToBigInt` abstract operation\n// https://tc39.es/ecma262/#sec-tobigint\nmodule.exports = function (argument) {\n  var prim = toPrimitive(argument, 'number');\n  if (typeof prim == 'number') throw new $TypeError(\"Can't convert number to bigint\");\n  // eslint-disable-next-line es/no-bigint -- safe\n  return BigInt(prim);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\n\nvar $RangeError = RangeError;\n\n// `ToIndex` abstract operation\n// https://tc39.es/ecma262/#sec-toindex\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toIntegerOrInfinity(it);\n  var length = toLength(number);\n  if (number !== length) throw new $RangeError('Wrong length or index');\n  return length;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar isDetached = require('../internals/array-buffer-is-detached');\n\nvar ArrayBufferPrototype = ArrayBuffer.prototype;\n\n// `ArrayBuffer.prototype.detached` getter\n// https://tc39.es/ecma262/#sec-get-arraybuffer.prototype.detached\nif (DESCRIPTORS && !('detached' in ArrayBufferPrototype)) {\n  defineBuiltInAccessor(ArrayBufferPrototype, 'detached', {\n    configurable: true,\n    get: function detached() {\n      return isDetached(this);\n    }\n  });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $transfer = require('../internals/array-buffer-transfer');\n\n// `ArrayBuffer.prototype.transferToFixedLength` method\n// https://tc39.es/proposal-arraybuffer-transfer/#sec-arraybuffer.prototype.transfertofixedlength\nif ($transfer) $({ target: 'ArrayBuffer', proto: true }, {\n  transferToFixedLength: function transferToFixedLength() {\n    return $transfer(this, arguments.length ? arguments[0] : undefined, false);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $transfer = require('../internals/array-buffer-transfer');\n\n// `ArrayBuffer.prototype.transfer` method\n// https://tc39.es/proposal-arraybuffer-transfer/#sec-arraybuffer.prototype.transfer\nif ($transfer) $({ target: 'ArrayBuffer', proto: true }, {\n  transfer: function transfer() {\n    return $transfer(this, arguments.length ? arguments[0] : undefined, true);\n  }\n});\n","'use strict';\nvar arrayToReversed = require('../internals/array-to-reversed');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\n\n// `%TypedArray%.prototype.toReversed` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.toreversed\nexportTypedArrayMethod('toReversed', function toReversed() {\n  return arrayToReversed(aTypedArray(this), getTypedArrayConstructor(this));\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar sort = uncurryThis(ArrayBufferViewCore.TypedArrayPrototype.sort);\n\n// `%TypedArray%.prototype.toSorted` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tosorted\nexportTypedArrayMethod('toSorted', function toSorted(compareFn) {\n  if (compareFn !== undefined) aCallable(compareFn);\n  var O = aTypedArray(this);\n  var A = arrayFromConstructorAndList(getTypedArrayConstructor(O), O);\n  return sort(A, compareFn);\n});\n","'use strict';\nvar arrayWith = require('../internals/array-with');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toBigInt = require('../internals/to-big-int');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar PROPER_ORDER = !!function () {\n  try {\n    // eslint-disable-next-line no-throw-literal, es/no-typed-arrays, es/no-array-prototype-with -- required for testing\n    new Int8Array(1)['with'](2, { valueOf: function () { throw 8; } });\n  } catch (error) {\n    // some early implementations, like WebKit, does not follow the final semantic\n    // https://github.com/tc39/proposal-change-array-by-copy/pull/86\n    return error === 8;\n  }\n}();\n\n// `%TypedArray%.prototype.with` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.with\nexportTypedArrayMethod('with', { 'with': function (index, value) {\n  var O = aTypedArray(this);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualValue = isBigIntArray(O) ? toBigInt(value) : +value;\n  return arrayWith(O, getTypedArrayConstructor(O), relativeIndex, actualValue);\n} }['with'], !PROPER_ORDER);\n"],"names":["class","_createElementBlock","_hoisted_1","$data","selectedResource","_createBlock","_component_ResourceDetail","key","resource","onBack","_cache","$event","_Fragment","_createElementVNode","_hoisted_2","_renderList","$options","currentPageItems","item","_component_ResourceCard","id","onClickResource","showResourceDetail","_hoisted_3","disabled","currentPage","onClick","changePage","_hoisted_4","_hoisted_5","_toDisplayString","totalPages","_hoisted_6","_ctx","$emit","$props","src","titleImageUrl","alt","title","name","props","type","Object","required","data","this","titleImageURL","mounted","methods","__exports__","innerHTML","content","decodeCache","getDecodeCache","exclude","cache","i","ch","String","fromCharCode","push","length","charCodeAt","toString","toUpperCase","slice","decode","string","defaultChars","replace","seq","result","l","b1","parseInt","b2","chr","b3","b4","componentChars","encodeCache","getEncodeCache","test","encode","keepEscaped","code","nextCode","encodeURIComponent","format","url","protocol","slashes","auth","hostname","indexOf","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","urlParse","slashesDenoteHost","u","parse","prototype","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","Uint16Array","map","c","decodeMap","Map","fromCodePoint","_a","codePoint","output","replaceCodePoint","get","CharCodes","TO_LOWER_BIT","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isAsciiAlphaNumeric","UPPER_Z","LOWER_Z","isEntityInAttributeInvalidEnd","EQUALS","EntityDecoder","constructor","decodeTree","emitCodePoint","errors","state","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","write","str","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","start","end","base","digitCount","Math","pow","startIdx","char","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","lastIndex","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","value","lo","hi","mid","midVal","htmlDecoder","htmlDecodeTree","xmlDecodeTree","decodeHTML","mode","Legacy","restoreDiff","arr","v","n","o","xmlCodeMap","codePointAt","getEscaper","regex","lastIdx","index","substring","EntityLevel","EncodingMode","_class","obj","call","isString","_hasOwnProperty","hasOwnProperty","has","object","assign","sources","Array","arguments","forEach","source","TypeError","keys","arrayReplaceAt","pos","newElements","isValidEntityCode","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","decoded","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","ucmicro","isMdAsciiPunct","normalizeReference","lib","mdurl","parseLinkLabel","disableNested","level","found","marker","prevPos","posMax","oldPos","md","inline","skipToken","labelEnd","parseLinkDestination","ok","parseLinkTitle","prev_state","can_continue","default_rules","Renderer","rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","code_block","fence","info","highlighted","langName","langAttrs","highlight","attrIndex","tmpAttrs","attrs","langPrefix","tmpToken","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","hidden","block","nesting","tag","needLf","nextToken","renderInline","render","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","altName","chain","fn","at","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","Token","markup","meta","attrPush","attrData","attrSet","attrGet","attrJoin","StateCore","inlineMode","NEWLINES_RE","NULL_RE","normalize","tok","isLinkOpen","isLinkClose","linkify","blockTokens","pretest","htmlLinkLevel","currentToken","links","nodes","lastPos","ln","fullUrl","normalizeLink","validateLink","urlText","schema","normalizeLinkText","token_o","token_t","token_c","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","stack","thisLevel","OUTER","t","canOpen","canClose","isSingle","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","single","openQuote","closeQuote","quotes","smartquotes","text_join","curr","last","_rules","r_normalize","r_block","r_inline","r_linkify","r_replacements","r_smartquotes","r_text_join","Core","ruler","process","State","StateBlock","bMarks","eMarks","tShift","sCount","bsCount","blkIndent","line","lineMax","tight","ddIndent","listIndent","parentType","s","indent","indent_found","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","keepLastLF","queue","lineIndent","lineStart","first","MAX_AUTOCOMPLETED_CELLS","getLine","escapedSplit","isEscaped","table","startLine","endLine","silent","nextLine","firstCh","secondCh","lineText","columns","aligns","shift","pop","columnCount","oldParentType","terminatorRules","token_to","tableLines","token_tho","token_htro","token_ho","token_il","tbodyLines","autocompletedCells","terminate","token_tbo","token_tro","token_tdo","mem","params","haveEndMarker","blockquote","oldLineMax","oldBMarks","oldBSCount","oldSCount","oldTShift","lastLineEmpty","isOutdented","spaceAfterMarker","adjustTab","initial","oldIndent","lines","tokenize","hr","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","isOrdered","markerValue","posAfterMarker","isTerminatingParagraph","Number","markerCharCode","listTokIdx","listLines","prevEmptyEnd","contentStart","indentAfterMarker","itemLines","oldTight","oldListIndent","reference","_endLine","getNextLine","isContinuation","lineContent","destRes","helpers","href","destEndPos","destEndLineNo","titleRes","label","references","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","block_names","html","heading","tmp","token_i","lheading","paragraph","r_table","r_code","r_fence","r_blockquote","r_hr","r_list","r_reference","r_html_block","r_heading","r_lheading","r_paragraph","ParserBlock","maxNesting","hasEmptyLines","prevLine","outTokens","StateInline","tokens_meta","pending","pendingLevel","delimiters","_prev_delimiters","backticks","backticksScanned","linkLevel","pushPending","token_meta","scanDelims","canSplitWord","count","left_flanking","right_flanking","can_open","can_close","isTerminatorChar","SCHEME_RE","link","matchAtStart","newline","pmax","ws","ESCAPED","escape","ch1","escapedStr","ch2","origStr","backtick","openerLength","matchStart","matchEnd","closerLength","strikethrough_tokenize","scanned","open","close","postProcess","loneMarkers","startDelim","endDelim","strikethrough_postProcess","emphasis_tokenize","isStrong","emphasis_post_process","res","ref","parseReference","labelStart","EMAIL_RE","AUTOLINK_RE","autolink","isLetter","lc","DIGITAL_RE","NAMED_RE","processDelimiters","openersBottom","headerIdx","lastTokenIdx","jumps","closerIdx","closer","minOpenerIdx","openerIdx","newMinOpenerIdx","opener","isOddMatch","lastJump","link_pairs","fragments_join","r_text","r_newline","r_escape","r_backticks","r_strikethrough","r_emphasis","r_link","r_image","r_autolink","r_html_inline","r_entity","_rules2","r_balance_pairs","r_fragments_join","ParserInline","ruler2","opts","re","src_Any","Any","src_Cc","Cc","src_Z","Z","src_P","P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isObject","isRegExp","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","tail","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","compile","reFactory","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","alias","slist","filter","schema_test","schema_search","schema_at_start","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","add","definition","set","m","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","callback","mapDomain","domain","parts","labels","encoded","ucs2decode","counter","extra","ucs2encode","codePoints","basicToDigit","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","toUnicode","toASCII","punycode","components","core","rules2","config","default","cfg_default","zero","cfg_zero","commonmark","cfg_commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","utils","ParserCore","renderer","configure","presets","missed","use","plugin","args","apply","parseInline","created","replaceRules","srcIndex","fetchContent","contentURL","response","fetch","parseContent","console","log","ResourceCard","ResourceDetail","resources","pageSize","computed","ceil","fetchResources","articlesResponse","articles","json","a","b","articleID","page","isPossiblePrototype","$String","$TypeError","module","exports","argument","ArrayBuffer","DataView","globalThis","uncurryThisAccessor","classof","O","byteLength","uncurryThis","arrayBufferByteLength","ArrayBufferPrototype","isDetached","it","toIndex","notDetached","detachTransferable","PROPER_STRUCTURED_CLONE_TRANSFER","structuredClone","DataViewPrototype","isResizable","maxByteLength","getInt8","setInt8","arrayBuffer","newLength","preserveResizability","newBuffer","newByteLength","undefined","fixedLength","transfer","copyLength","NAME","Constructor","Prototype","NATIVE_ARRAY_BUFFER","DESCRIPTORS","isCallable","hasOwn","tryToString","createNonEnumerableProperty","defineBuiltIn","defineBuiltInAccessor","isPrototypeOf","getPrototypeOf","setPrototypeOf","wellKnownSymbol","uid","InternalStateModule","enforceInternalState","enforce","getInternalState","Int8Array","Int8ArrayPrototype","Uint8ClampedArray","Uint8ClampedArrayPrototype","TypedArray","TypedArrayPrototype","ObjectPrototype","TO_STRING_TAG","TYPED_ARRAY_TAG","TYPED_ARRAY_CONSTRUCTOR","NATIVE_ARRAY_BUFFER_VIEWS","opera","TYPED_ARRAY_TAG_REQUIRED","TypedArrayConstructorsList","Uint8Array","Int16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","isView","klass","getTypedArrayConstructor","isTypedArray","aTypedArray","aTypedArrayConstructor","C","exportTypedArrayMethod","KEY","property","forced","ARRAY","TypedArrayConstructor","error2","exportTypedArrayStaticMethod","Function","configurable","lengthOfArrayLike","toIntegerOrInfinity","$RangeError","relativeIndex","actualIndex","A","WorkerThreads","channel","buffer","$detach","getBuiltInNodeModule","$ArrayBuffer","$MessageChannel","MessageChannel","detach","transferable","port1","postMessage","ENVIRONMENT","userAgent","userAgentStartsWith","Bun","version","Deno","window","document","IS_NODE","getBuiltinModule","requireObjectCoercible","aPossiblePrototype","setter","CORRECT_SETTER","__proto__","fails","V8","clone","toPrimitive","prim","BigInt","toLength","number","$","$transfer","target","transferToFixedLength","arrayToReversed","ArrayBufferViewCore","aCallable","arrayFromConstructorAndList","compareFn","arrayWith","isBigIntArray","toBigInt","PROPER_ORDER","valueOf","actualValue"],"sourceRoot":""}